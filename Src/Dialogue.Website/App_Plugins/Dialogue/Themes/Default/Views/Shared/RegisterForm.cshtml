@model Dialogue.Logic.Models.ViewModels.RegisterViewModel
@using Dialogue.Logic.Application.ExtensionMethods
@using Dialogue.Logic.Controllers
@{

}
@if (Html.Settings().UseGoogleRecaptcha)
{
    <script src='https://www.google.com/recaptcha/api.js'></script>
}

@if (!User.Identity.IsAuthenticated)
{
    @* If using reCAPTCHA, we need to cancel the submit if the reCAPTCHA has not been completed. *@
    string onSubmit = string.Empty;
    if (Html.Settings().UseGoogleRecaptcha)
    {
        onSubmit = "return $(this).valid() && grecaptcha.getResponse() != ''";
    }

    @Html.ThemedPartial("SocialButtons")

    using (Html.BeginUmbracoForm<DialogueLoginRegisterSurfaceController>("Register", FormMethod.Post, new { @class = "form", role = "form", onSubmit = onSubmit }))
    {
        @Html.ValidationSummary(false)
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(m => m.UserName)
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserName)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password)
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email)
        </div>
        if (Html.Settings().UseGoogleRecaptcha)
        {
            <div class="form-group">
                <div class="g-recaptcha" data-sitekey="@Html.Settings().GoogleRecaptchaSiteKey"></div>
            </div>
        }
        else if (!string.IsNullOrEmpty(Html.Settings().SpamQuestion))
        {
            <div class="form-group">
                <label for="SpamAnswer">@Html.Settings().SpamQuestion</label>
                @Html.TextBoxFor(x => Model.SpamAnswer, new { @class = "form-control" })
            </div>             
        }

        <div class="submit-holder">
            <button type="submit" class="btn btn-default">
                @Html.Lang("Buttons.Register")
            </button>
        </div>

        @Html.HiddenFor(x => x.ReturnUrl)
    }

}
else
{
    <p>@Html.Lang("Members.AlreadyRegistered")</p>
}
